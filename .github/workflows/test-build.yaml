name: Test Build (Current Branch)

on:
  workflow_dispatch:
    inputs:
      test_docker_build:
        description: 'Test Docker build (no push)'
        required: false
        default: true
        type: boolean
      test_publish:
        description: 'Actually publish Docker image (use with caution)'
        required: false
        default: false
        type: boolean

env:
  DOCKER_IMAGE_NAME: farport/crun-jwt-node-proxy
  NODE_VERSION: '22'

jobs:
  test-build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'yarn'
    
    - name: Install dependencies
      run: yarn install --frozen-lockfile
    
    - name: Run linting
      run: yarn lint
    
    - name: Run tests
      run: yarn test
    
    - name: Build TypeScript
      run: yarn build:ts
    
    - name: Set up Docker Buildx
      if: github.event.inputs.test_docker_build == 'true'
      uses: docker/setup-buildx-action@v3
    
    - name: Extract metadata for testing
      if: github.event.inputs.test_docker_build == 'true'
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.DOCKER_IMAGE_NAME }}
        tags: |
          type=sha,prefix=test-{{branch}}-
          type=ref,event=branch,prefix=test-
    
    - name: Build Docker image (test only - no push)
      if: github.event.inputs.test_docker_build == 'true' && github.event.inputs.test_publish == 'false'
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: false
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: |
          version=test-${{ github.ref_name }}
          git_commit=${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    - name: Login to Docker Hub
      if: github.event.inputs.test_publish == 'true'
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.FP8_DOCKER_PUBLISH }}
    
    - name: Build and push Docker image (test publish)
      if: github.event.inputs.test_publish == 'true'
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: |
          version=test-${{ github.ref_name }}
          git_commit=${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    - name: Build Summary
      run: |
        echo "## Build Summary" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ TypeScript build completed" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Tests passed" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Linting passed" >> $GITHUB_STEP_SUMMARY
        if [ "${{ github.event.inputs.test_docker_build }}" == "true" ]; then
          echo "- ✅ Docker image built successfully" >> $GITHUB_STEP_SUMMARY
        fi
        if [ "${{ github.event.inputs.test_publish }}" == "true" ]; then
          echo "- ✅ Docker image published to registry" >> $GITHUB_STEP_SUMMARY
          echo "- 🏷️ Image tags: ${{ steps.meta.outputs.tags }}" >> $GITHUB_STEP_SUMMARY
        fi
